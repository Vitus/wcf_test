//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wcf_client_app.test_svc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TierRequest", Namespace="http://schemas.datacontract.org/2004/07/wcf_host.models.V2")]
    [System.SerializableAttribute()]
    public partial class TierRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short InstanceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short InstanceId {
            get {
                return this.InstanceIdField;
            }
            set {
                if ((this.InstanceIdField.Equals(value) != true)) {
                    this.InstanceIdField = value;
                    this.RaisePropertyChanged("InstanceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnotherWorkRequest", Namespace="http://schemas.datacontract.org/2004/07/wcf_host.models.V2")]
    [System.SerializableAttribute()]
    public partial class AnotherWorkRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short InstanceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short InstanceId {
            get {
                return this.InstanceIdField;
            }
            set {
                if ((this.InstanceIdField.Equals(value) != true)) {
                    this.InstanceIdField = value;
                    this.RaisePropertyChanged("InstanceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DifferentFormatRequest", Namespace="http://schemas.datacontract.org/2004/07/wcf_host.models.V2")]
    [System.SerializableAttribute()]
    public partial class DifferentFormatRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short InstanceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short InstanceId {
            get {
                return this.InstanceIdField;
            }
            set {
                if ((this.InstanceIdField.Equals(value) != true)) {
                    this.InstanceIdField = value;
                    this.RaisePropertyChanged("InstanceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="test_svc.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DoWork", ReplyAction="http://tempuri.org/IService/DoWorkResponse")]
        string DoWork(wcf_client_app.test_svc.TierRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DoWork", ReplyAction="http://tempuri.org/IService/DoWorkResponse")]
        System.Threading.Tasks.Task<string> DoWorkAsync(wcf_client_app.test_svc.TierRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DoAnotherWork", ReplyAction="http://tempuri.org/IService/DoAnotherWorkResponse")]
        string DoAnotherWork(wcf_client_app.test_svc.AnotherWorkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DoAnotherWork", ReplyAction="http://tempuri.org/IService/DoAnotherWorkResponse")]
        System.Threading.Tasks.Task<string> DoAnotherWorkAsync(wcf_client_app.test_svc.AnotherWorkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DoDifferentRequestFormatWork", ReplyAction="http://tempuri.org/IService/DoDifferentRequestFormatWorkResponse")]
        string DoDifferentRequestFormatWork(wcf_client_app.test_svc.DifferentFormatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DoDifferentRequestFormatWork", ReplyAction="http://tempuri.org/IService/DoDifferentRequestFormatWorkResponse")]
        System.Threading.Tasks.Task<string> DoDifferentRequestFormatWorkAsync(wcf_client_app.test_svc.DifferentFormatRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : wcf_client_app.test_svc.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<wcf_client_app.test_svc.IService>, wcf_client_app.test_svc.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string DoWork(wcf_client_app.test_svc.TierRequest request) {
            return base.Channel.DoWork(request);
        }
        
        public System.Threading.Tasks.Task<string> DoWorkAsync(wcf_client_app.test_svc.TierRequest request) {
            return base.Channel.DoWorkAsync(request);
        }
        
        public string DoAnotherWork(wcf_client_app.test_svc.AnotherWorkRequest request) {
            return base.Channel.DoAnotherWork(request);
        }
        
        public System.Threading.Tasks.Task<string> DoAnotherWorkAsync(wcf_client_app.test_svc.AnotherWorkRequest request) {
            return base.Channel.DoAnotherWorkAsync(request);
        }
        
        public string DoDifferentRequestFormatWork(wcf_client_app.test_svc.DifferentFormatRequest request) {
            return base.Channel.DoDifferentRequestFormatWork(request);
        }
        
        public System.Threading.Tasks.Task<string> DoDifferentRequestFormatWorkAsync(wcf_client_app.test_svc.DifferentFormatRequest request) {
            return base.Channel.DoDifferentRequestFormatWorkAsync(request);
        }
    }
}
